package cucumber.api.tests.common.enums.queries;

import lombok.AllArgsConstructor;
import lombok.Getter;

@AllArgsConstructor
@Getter
public enum QueryParametersEnum {


    ACCESS_ID("accessId"),
    ACCOUNT_FIELDS("accountFields"),
    ACCOUNT_NUMBER("accountNumber"),
    ACCOUNT_PROFILE("accountProfile"),
    ACCOUNT_TYPE_REQUIRE_MAC("accountTypeRequiredMec"),
    ACTIVE("active"),
    ALLOW_RESET_PASSWORD_BUTTON("allowResetPasswordButton"),
    AMOUNT("amount"),
    ASK_FOR_ACCOUNT_PROFILE("askForAccountProfile"),
    AUTHORIZATION_STATUS("authorizationStatus"),
    AUTH_FIELDS("authFields"),
    AUTH_TOKEN("authToken"),
    AUTHORIZATION_TEST_TOKEN("authorizationTextToken"),
    AUTHORIZATION_TIME_STAMP("authorizationTimestamp"),
    BANK_DICTIONARY("bankDictionary"),
    BANK_ID("bankId"),
    BLOCK_MEC_EXISTING_FIC("blockMecExistingFic"),
    CANCEL_URL("cancelUrl"),
    CID("cid"),
    COUNTRY("country"),
    CREATE_AT("createdAt"),
    CURRENCY("currency"),
    CURRENT_PP_ID("currentPpId"),
    CUSTOMER_ADDRESS_1_PARAM("customer.address.address1"),
    CUSTOMER_ADDRESS_2_PARAM("customer.address.address2"),
    CUSTOMER_ADDRESS_CITY_PARAM("customer.address.city"),
    CUSTOMER_ADDRESS_COUNTRY_DOT("customer.address.country"),
    CUSTOMER_ADDRESS_COUNTRY_PARAM("customer.address.country"),
    CUSTOMER_ADDRESS_STATE_PARAM("customer.address.state"),
    CUSTOMER_ADDRESS_STATE_DOT("customer.address.state"),
    CUSTOMER_ADDRESS_ZIP_PARAM("customer.address.zip"),
    CUSTOMER_DRIVER_LICENSE_NUMBER_PARAM("customer.driverLicense.number"),
    CUSTOMER_DRIVER_LICENSE_STATE_PARAM("customer.driverLicense.state"),
    CUSTOMER_EMAIL_PARAM("customer.email"),
    CUSTOMER_NAME("customerName"),
    CUSTOMER_NAME_PARAM("customer.name"),
    CUSTOMER_COLLECTION_REF("customerCollectionRef"),
    CUSTOMER_EXTERNAL_ID("customerExternalId"),
    CUSTOMER_EXTERNAL_DOT_ID("customer.externalId"),
    CUSTOMER_PHONE("customer.phone"),
    CUSTOMER_TAX_ID("customer.taxId"),
    DEPRECATED("deprecated"),
    DESCRIPTION("description"),
    DEVICE_CATEGORY("deviceCategory"),
    DEVICE_OS("deviceOs"),
    DEVICE_TYPE("deviceType"),
    DEVICE_FINGER_PRINT("deviceFingerprint"),
    DYNAMIC_WIDGET("dynamicWidget"),
    EN("en"),
    END_COMPLETE_DATE("endCompletedDate"),
    END_CREATE_DATE("endCreateDate"),
    END_PROCESSED_DATE("endProcessedDate"),
    END_UPDATE_DATE("endUpdateDate"),
    ERROR_MESSAGE("errorMessage"),
    EXCLUDED_FROM_COLLECTIONS("excludedFromCollections"),
    EXCLUDED_FROM_REPORTS("excludedFromReports"),
    FI_CODE("fiCode"),
    FI_CUSTOMER_ID("fiCustomerId"),
    FIELD_TYPE("fieldType"),
    FINGER_PRINT("fingerprint"),
    FINISH_BUTTON_LABEL("finishButtonLabel"),
    FORGOT_MY_PASSWORD_CUSTOM_ERROR("forgotMyPasswordCustomError"),
    FPD("fpd"),
    FRAMEWORK("framework"),
    GENERATE_FP("generateFp"),
    GLOBEX_LANG_PARAM("globex.lang"),
    GLOBEX_DESCRIPTION("globexDescription"),
    GR("gr"),
    GRP("grp"),
    HAS_BUSINESS_ACCOUNT_SUPPORT("hasBusinessAccountSupport"),
    HAS_FUNDS("hasFunds"),
    HTTP("http"),
    IBAN("iban"),
    ID("id"),
    INDEX("index"),
    INSTITUTION_COLOR("institutionColor"),
    INSTITUTION_FOREGROUND_COLOR("institutionForegroundColor"),
    INSTITUTION_ICON_URL("institutionIconUrl"),
    INSTITUTION_LOGO_URL("institutionLogoUrl"),
    INSTITUTION_NAME("institutionName"),
    INSTITUTION_SHORT_NAME("institutionShortName"),
    IP_ADDR("ipAddr"),
    IS_DELETED("isDeleted"),
    IS_PSF2("isPSD2"),
    LABEL("label"),
    LANG("lang"),
    LANGUAGE("language"),
    LAST_USED("lastUsed"),
    LIGHT_BOX_COMPLETES("lightboxCompletes"),
    LIGHT_BOX_INITIATES("lightboxInitiates"),
    LOGIN_ERROR_COUNT("loginErrorCount"),
    LOGO_URL("logoUrl"),
    LT("lt"),
    MAX_AMOUNT("maxAmount"),
    MFA("mfa"),
    MAX_PAID("maxPaid"),
    MAX_REFUNDED("maxRefunded"),
    MAX_RISK_INDEX("maxRiskIndex"),
    MCT_CUSTOMER_NAME("mctCustomerName"),
    MERCHANT_ID("merchantId"),
    MERCHANT_REFERENCE("merchantReference"),
    METADATA_LANG_CID("metadata.cid"),
    METADATA_LANG_PARAM("metadata.lang"),
    METADATA_SKIN_CODE_PARAM("metadata.skinCode"),
    MIN_AMOUNT("minAmount"),
    MIN_REFUNDED("minRefunded"),
    MIN_PAID("minPaid"),
    MIN_RISK_INDEX("minRiskIndex"),
    MOBILE_RESET_PASSWORD_URL("mobileResetPasswordUrl"),
    NAME("name"),
    NUMBER("number"),
    OPTIONS("options"),
    ORDER_ID("orderId"),
    ORDER_BY("orderBy"),
    ORIGINAL_TRANSACTION_ID("originalTransactionId"),
    PAGE("page"),
    PASSWORD("password"),
    PROMPT_PASSWORD("prompt-password"),
    PAYMENT_ID("paymentId"),
    PAYMENT_FLOW("paymentFlow"),
    PAYMENT_FLOW_MERCHANT_ID("paymentFlowMerchantIdKey"),
    PAYMENT_PROVIDER_ID("paymentProviderId"),
    PAYMENT_TYPE("paymentType"),
    PERCENTAGE("percentage"),
    PERSON_ID("personId"),
    PP_ID("ppId"),
    PP_TRANSACTION_ID("ppTransactionId"),
    PP_TRX_STATUS_CODE("ppTrxStatusCode"),
    PRINCIPAL_NAME("principalName"),
    PRINCIPAL_SIGNATURE("principalSignature"),
    RECURRENCE("recurrence"),
    RECURRENCE_AUTOMATIC_CAPTURE_PARAM("recurrence.automaticCapture"),
    RECURRENCE_END_DATE_PARAM("recurrence.endDate"),
    RECURRENCE_FREQUENCY_PARAM("recurrence.frequency"),
    RECURRENCE_FREQUENCY_UNIT_PARAM("recurrence.frequencyUnit"),
    RECURRENCE_FREQUENCY_UNIT_TYPE_PARAM("recurrence.frequencyUnitType"),
    RECURRENCE_RECURRING_AMOUNT_PARAM("recurrence.recurringAmount"),
    RECURRENCE_START_DATE_PARAM("recurrence.startDate"),
    REFERER("referer"),
    REQUEST_SIGNATURE("requestSignature"),
    RESET_PASSWORD_URL("resetPasswordUrl"),
    RETURN_URL("returnUrl"),
    ROUTING_NUMBER("routingNumber"),
    SELECTED_ACCOUNT("selectedAccount"),
    SHOW_MANUAL_ENTRY_REASON("showManualEntryReason"),
    SORT_ORDER("sortOrder"),
    START_COMPLETE_DATE("startCompletedDate"),
    START_CREATE_DATE("startCreateDate"),
    START_INDEX("startIndex"),
    START_PROCESSED_DATE("startProcessedDate"),
    START_UPDATE_DATE("startUpdateDate"),
    STATE("state"),
    STEP_ID("stepId"),
    STORAGE("storage"),
    SUPPORTED("supported"),
    SUPPORTED_LANGUAGES("supportedLanguages"),
    TAX_ID("taxId"),
    TELE_CHECK("teleCheck"),
    TIMESTAMP("timestamp"),
    TIMEZONE_ABBR("timezoneAbbr"),
    TIMEZONE_OFFSET("timezoneOffset"),
    TOKEN("token"),
    TRANSACTION("transaction"),
    TRANSACTION_ID("transactionId"),
    TYPE("type"),
    UI_PARAMS("uiParams"),
    UI_THEME("uiTheme"),
    USERNAME("username"),
    PROMPT_USERNAME("prompt-username"),
    V("v"),
    VALUE("value"),
    VERIFICATION_ACCOUNT_NUMBER("verificationAccountNumber"),
    VERIFICATION_FI_CODE("verificationFICode"),
    VERIFICATION_ROUTING_NUMBER("verificationRoutingNumber"),
    VERIFICATION_STATUS("verificationStatus"),
    VERIFIED("verified"),
    WIDGET_ENABLED("widgetEnabled"),
    WIDGET_ID("widgetId"),
    WIDGET_LOADED("widgetLoaded"),
    WIDGET_IMPRESSIONS("widgetImpressions");

    private final String keyName;

}
